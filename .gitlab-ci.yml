variables:
    DJANGO_VERSION: ">=1.11,<1.11.99"  # Use lowest supported Django

stages:
    - analysis
    - test
    - coverage

isort:
    tags:
        - python2
    stage: analysis
    before_script:
        - pip install isort
        - pip list
    script: "make check-isort"

flake8:
    tags:
        - python2
    stage: analysis
    before_script:
        - pip install flake8
        - pip list
    script: "make check-flake8"

i18n:
    tags:
        - python2
    stage: analysis
    before_script:
        - pip install django$DJANGO_VERSION
        - pip list
    script: "make check-i18n"

pydocstyle:
    tags:
        - python2
    stage: analysis
    before_script:
        - pip install pydocstyle!=2.1.0
        - pip list
    script: "make check-doc"

.test: &test
    tags:
        - python2
    stage: test
    script:
        # Install coverage
        - pip install coverage
        - mkdir coverage
        # Install omniORB and omniIDL
        - apt-get update && apt-get install -y python-omniorb omniidl-python
        # freddist are required to install our dependencies
        - pip install -e git+git@gitlab.office.nic.cz:utils/freddist.git#egg=fred-distutils
        # Get pr-version and update requirements
        - git clone git@gitlab.office.nic.cz:pr-utils/pr-version.git --depth 1
        - pervert-requirements.py
        # Parse IDL requirements
        - if [ -e pr-version/devel/$CI_BUILD_REF_NAME.conf ]; then IDL_BRANCH=$(python -c "import json;obj=json.loads(open('pr-version/devel/${CI_BUILD_REF_NAME}.conf').read());print obj.get('idl',{}).get('revision', 'master')"); fi
        # Control print of requirements
        - cat requirements.txt
        # IDL's are required for rdap
        - git clone git@gitlab.office.nic.cz:fred/idl.git
        - (cd idl && git checkout $IDL_BRANCH)
        - pip install django$DJANGO_VERSION
        - pip install -r requirements.txt
        - pip install -r requirements-dev.txt
        - pip list
        - make test-coverage
    artifacts:
        expire_in: 1d
        paths:
        - coverage/
    variables:
        COVERAGE_FILE: "coverage/.coverage.$CI_BUILD_ID"

test:django:
    <<: *test

coverage-report:
    tags:
        - python2
    stage: coverage
    script:
        - pip install coverage
        - coverage combine coverage/
        - coverage report --include=*/tests/* --fail-under=100
        - coverage report
